<?xml version="1.0" encoding="utf-8"?>
<disqus xmlns="http://disqus.com" xmlns:dsq="http://disqus.com/disqus-internals" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://disqus.com/api/schemas/1.0/disqus.xsd http://disqus.com/api/schemas/1.0/disqus-internals.xsd">
    <category dsq:id="2973741">
        <forum>firfiblog</forum>
        <title>General</title>
        <isDefault>true</isDefault>
    </category>
    <thread dsq:id="3685617534">
        <id>http://loskutoff.com/blog/meteorjs-born-to-be-legacy/</id>
        <forum>firfiblog</forum>
        <category dsq:id="2973741" />
        <link>http://loskutoff.com/blog/meteorjs-born-to-be-legacy/</link>
        <title>Born to Be Legacy, or MeteorJS: Fractal of Helloworld-oriented Design - firfiBlog</title>
        <message />
        <createdAt>2015-04-16T05:55:21Z</createdAt>
        <author>
            <name>firfi</name>
            <isAnonymous>false</isAnonymous>
            <username>firfi</username>
        </author>
        <isClosed>false</isClosed>
        <isDeleted>false</isDeleted>
    </thread>
    <post dsq:id="1970249805">
        <id />
        <message><![CDATA[<p>I am one of the developers of Meteor.</p><p>Overall, I might say, that all points here are well deserved - Meteor has problems in some design decisions. I do want to comment with what is going on in Meteor Core to fix these.</p><p>A. Session variables: these are global variables, preserved on Hot Code Push. They are designed to be something that is global for the user, as a set of settings of your text-editor are global for the session, or the set of your toolbars hidden in Photoshop is preserved only for this project. Session variables are the wrong way to manage your reactive variables, they are really bad at this.</p><p>What has Meteor Core done?</p><p>Sessions are discouraged. The official [tutorial](<a href="https://www.meteor.com/try" rel="nofollow noopener" title="https://www.meteor.com/try">https://www.meteor.com/try</a> ) uses Sessions only to store one variable that *actually* is something that should be in Session - do you want to hide the list of done tasks.</p><p>What to use instead?</p><p>You can use [ReactiveVars](<a href="http://docs.meteor.com/#/full/reactivevar" rel="nofollow noopener" title="http://docs.meteor.com/#/full/reactivevar">http://docs.meteor.com/#/fu...</a> ) or in the future, [Template local state](<a href="https://github.com/meteor/meteor/pull/3561" rel="nofollow noopener" title="https://github.com/meteor/meteor/pull/3561">https://github.com/meteor/m...</a> ) baked into the templating language.</p><p>B. The packaging system is different. It has good sides (sharing files between client/server, an API to plug into the unified build system), bad parts (difference from the commonjs modules, overuse of globals, coupling of many different features to the package format).</p><p>To be fair: in 2012, I don't think the world has caught up on what users pray today: webpack and browserify. Bower still cannot resolve conflicts automatically, npm still loads 10 copies of one module. ES6 modules were not on the rise as they are right now.</p><p>I do believe we can have a bright future with the ES6 modules and a better dependencies resolution.</p><p>(the fact that `this` in Browserify and Webpack means something different is an irrelevant complaint IMO)</p><p>There are good points on what Meteor can work in this blogpost, but the language to express it is too cynical for my taste.</p>]]></message>
        <createdAt>2015-04-16T07:34:11Z</createdAt>
        <isDeleted>false</isDeleted>
        <isSpam>false</isSpam>
        <author>
            <name>imslavko</name>
            <isAnonymous>false</isAnonymous>
            <username>imslavko</username>
        </author>
        <thread dsq:id="3685617534" />
    </post>
    <post dsq:id="1970472394">
        <id />
        <message><![CDATA[<p>@imslavko:disqus, thanks you very much for you feedback and sorry that I had to use such article style; the whole point of this was to attract attention to described problems that I didn't got in github/stackoverflow. I'll change the article style soon. <br>However, I still consider 'this' issue very relevant. It makes porting packages to Meteor painful and that harm not just me (I cope with this problem well) but for Meteor infrastructure. You just lose a huge subset of community-written packages because of that.<br>Maybe I don't understand something here, and 'this' is irrelevant indeed. If it isn't, can you elaborate it little more?</p>]]></message>
        <createdAt>2015-04-16T11:47:46Z</createdAt>
        <isDeleted>false</isDeleted>
        <isSpam>false</isSpam>
        <author>
            <name>firfi</name>
            <isAnonymous>false</isAnonymous>
            <username>firfi</username>
        </author>
        <thread dsq:id="3685617534" />
        <parent dsq:id="1970249805" />
    </post>
    <post dsq:id="1971077534">
        <id />
        <message><![CDATA[<p>I think that the packaging for Meteor already requires changes to the original repository, and coping with "this" can be worked around.</p><p>There are plenty of other formats of the packages, amdjs, systemjs, commonjs, etc. They all would require some processing to adapt the code from one system to another (unless I am that clueless about them and they just happen to work well with each other). I do agree, that standardizing on the package format is important, but I think it will be achieved with ES6 modules, until then there are always will be differences like this here and there.</p><p>By "irrelevant", I meant that it is just a small detail of the whole problem of "Meteor's package format is so different from everyone else". That is the main point, `this` is just a detail that as well could be something else.</p>]]></message>
        <createdAt>2015-04-16T17:46:50Z</createdAt>
        <isDeleted>false</isDeleted>
        <isSpam>false</isSpam>
        <author>
            <name>imslavko</name>
            <isAnonymous>false</isAnonymous>
            <username>imslavko</username>
        </author>
        <thread dsq:id="3685617534" />
        <parent dsq:id="1970472394" />
    </post>
    <post dsq:id="1972139771">
        <id />
        <message><![CDATA[<p>I have created a package to solve the loading order and globals problem:<br><a href="https://github.com/meteorflux/reactive-dependency/" rel="nofollow noopener" title="https://github.com/meteorflux/reactive-dependency/">https://github.com/meteorfl...</a><br>It adds dependency injection as well.</p><p>Let me know what you think !</p>]]></message>
        <createdAt>2015-04-17T07:27:56Z</createdAt>
        <isDeleted>false</isDeleted>
        <isSpam>false</isSpam>
        <author>
            <name>Luis Herranz</name>
            <isAnonymous>false</isAnonymous>
            <username>luisherranz</username>
        </author>
        <thread dsq:id="3685617534" />
    </post>
    <post dsq:id="1972438352">
        <id />
        <message><![CDATA[<p>Great work! Currently I do something like this [without packages] with Q's promises. Still, it looks rather dirty, and your solution can mean less code. I just hope to have something like that (and with same API) for backend and frontend both (though it currently impossible with Tracker)</p>]]></message>
        <createdAt>2015-04-17T12:45:25Z</createdAt>
        <isDeleted>false</isDeleted>
        <isSpam>false</isSpam>
        <author>
            <name>firfi</name>
            <isAnonymous>false</isAnonymous>
            <username>firfi</username>
        </author>
        <thread dsq:id="3685617534" />
        <parent dsq:id="1972139771" />
    </post>
    <post dsq:id="1972440255">
        <id />
        <message><![CDATA[<p>I'll bring here my comment from <a href="http://crater.io" rel="nofollow noopener" title="crater.io">crater.io</a> (<a href="https://crater.io/posts/pAY62qQxNjkmGhxDR/comment/LSgo6ZZxZS8a92WFf):" rel="nofollow noopener" title="https://crater.io/posts/pAY62qQxNjkmGhxDR/comment/LSgo6ZZxZS8a92WFf):">https://crater.io/posts/pAY...</a></p><p>Thanks a lot for commentators feedback. I appreciate it very much. It was exactly what I was trying to archive - shed a light on really important problems of Meteor, and obtain an estimation of their resolving progress. I could've done it on StackOverflow, in Meteor IRC channel or in github, and I did, but these problems didn't meet enough (somewhere nothing at all) attention. So whole reason of sarcastic style of the text and of title was to get it at last.</p><p>However, I didn't wanted and still doesn't want to personally offend anyone and watched myself while writing it, so all complaints I had are directed towards architecture.</p><p>As @Slave Kim pointed out in blog comments, some of the problems are resolved, so I'll describe it soon, editing the article. Thanks @Slava for your feedback.</p><p>I can't agree with @amitkenny, as code really isn't so simple underneath and prepares a trap for those who doesn't understand it's bowels.</p><p>That doesn't mean that I drop the platform in a rage. I'm ok with things as they are for myself as I have enough knowledge to make it work (and I'll share it).</p><p>What concerns me is that these things are hard for new programmers who wish to do things 'better' from the start. I'm speaking about concrete example - substitution of Blaze to React. Presently React has a lot of great libs packed with webpack/browserify, really well-written ones and well-tested. New programmers want to use it - and don't find it in Atmosphere, and stick with custom solutions (here, not necessary solutions would be react-based, I'm talking about just a tendency in general), then bring it as their own, very often not so well-written libs, then drop their maintaining. And another programmers find those and lost their time to filter out not maintained ones.</p><p>So I really hope Meteor developers would find a solution to gather it all together.</p><p>Currently I ported several React libs (great tcomb/tcomb-validator/tcomb-form ones, griddle, baconjs, react-bootstrap) to Atmosphere and I'm concerned that there's too much to maintain and looking for, as I don't want to stop with it and port another libraries.</p><p>So well-working [with webpack/browserify] packaging system would be a great help for me and for community.</p>]]></message>
        <createdAt>2015-04-17T12:46:50Z</createdAt>
        <isDeleted>false</isDeleted>
        <isSpam>false</isSpam>
        <author>
            <name>firfi</name>
            <isAnonymous>false</isAnonymous>
            <username>firfi</username>
        </author>
        <thread dsq:id="3685617534" />
    </post>
</disqus>
